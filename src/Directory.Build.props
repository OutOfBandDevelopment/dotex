<Project>
	<PropertyGroup Condition="'$(SolutionDir)' == ''">
		<SolutionDir Condition="'$(SolutionDir)' == '' and $([System.IO.Directory]::GetFiles('../', '*.sln').get_Length()) != 0">../</SolutionDir>
		<SolutionDir Condition="'$(SolutionDir)' == '' and $([System.IO.Directory]::GetFiles('../../', '*.sln').get_Length()) != 0">../../</SolutionDir>
		<SolutionDir Condition="'$(SolutionDir)' == '' and $([System.IO.Directory]::GetFiles('../../../', '*.sln').get_Length()) != 0">../../../</SolutionDir>
		<SolutionDir Condition="'$(SolutionDir)' == '' and $([System.IO.Directory]::GetFiles('../../../../', '*.sln').get_Length()) != 0">../../../../</SolutionDir>
		<SolutionDir Condition="'$(SolutionDir)' == '' and $([System.IO.Directory]::GetFiles('../../../../../', '*.sln').get_Length()) != 0">../../../../../</SolutionDir>
		<SolutionDir Condition="'$(SolutionDir)' != ''">$([System.IO.Path]::GetFullPath('$(SolutionDir)'))</SolutionDir>
	</PropertyGroup>

	<PropertyGroup>
		<Company>Out-of-Band Development, LLC</Company>
		<Copyright>$(Company), $([System.DateTime]::Now.ToString('yyyy'))</Copyright>

		<RepositoryUrl>https://github.com/OutOfBandDevelopment/dotex/</RepositoryUrl>
		<RepositoryType>GitHub</RepositoryType>
		<Authors>Matthew Whited</Authors>

		<!--<GenerateDocumentationFile>true</GenerateDocumentationFile>-->
		<EnableWindowsTargeting>true</EnableWindowsTargeting>
		
		<ManagePackageVersionsCentrally>false</ManagePackageVersionsCentrally>
		

    <TestResultsOutFolderPath>$(SolutionDir)TestResults\</TestResultsOutFolderPath>
    <VSTestResultsDirectory>$(SolutionDir)TestResults\</VSTestResultsDirectory>
    <RunSettingsFilePath>$(SolutionDir).runsettings</RunSettingsFilePath>
	</PropertyGroup>

  <!--https://www.meziantou.net/the-roslyn-analyzers-i-use.htm-->
  <!--<PropertyGroup Condition="'$(IsTestProject)' != 'true'">
    <EnableNETAnalyzers>true</EnableNETAnalyzers>
    <AnalysisMode>AllEnabledByDefault</AnalysisMode>
    <AnalysisLevel>latest</AnalysisLevel>
  </PropertyGroup>-->

  <!--https://www.meziantou.net/the-roslyn-analyzers-i-use.htm-->
  <!--<ItemGroup Condition="'$(IsTestProject)' != 'true'">
    <PackageReference Include="Microsoft.CodeAnalysis.NetAnalyzers" Version="8.0.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Meziantou.Analyzer" Version="2.0.150">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>-->
	<PropertyGroup Condition="Exists('$(SolutionDir)..\LICENSE')">
		<PackageLicenseFile>LICENSE</PackageLicenseFile>
	</PropertyGroup>
	<ItemGroup Condition="Exists('$(SolutionDir)..\LICENSE')">
		<LicenseFile Include="$(SolutionDir)..\LICENSE" />
		<None Include="@(LicenseFile)" Pack="true" PackagePath="\" />
	</ItemGroup>

 <!--
 <PropertyGroup Condition="'$(LOCAL_NUGET)' != ''">
    <PackageOutputPath>$(LOCAL_NUGET.Trim('\'))\</PackageOutputPath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(LOCAL_NUGET)' == ''">
    <PackageOutputPath>$(SolutionDir)publish\packages</PackageOutputPath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(DOCUMENT_PATH)' != ''">
    <DocumentPath>$(DOCUMENT_PATH.Trim('\'))\</DocumentPath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(DOCUMENT_PATH)' == ''">
    <DocumentPath>$(SolutionDir)..\docs\</DocumentPath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(CodeDocumentPath)' == ''">
    <CodeDocumentPath>$(DocumentPath)code\</CodeDocumentPath>
  </PropertyGroup>-->
  
	<PropertyGroup>
		<BasePublishPath>$(SolutionDir)publish\</BasePublishPath>
		<PackageOutputPath>$(BasePublishPath)packages\</PackageOutputPath>
		<DocumentPath>$(SolutionDir)..\docs\</DocumentPath>
		<CodeDocumentPath>$(DocumentPath)code\</CodeDocumentPath>
	</PropertyGroup>

  <Target Name="Details">
    <Message Text="===== SolutionDir:              $(SolutionDir)"  Importance="high"/>
    <Message Text="===== TestResultsOutFolderPath: $(TestResultsOutFolderPath)"  Importance="high"/>
    <Message Text="===== DocumentPath:             $(DocumentPath)"  Importance="high"/>
    <Message Text="===== CodeDocumentPath:         $(CodeDocumentPath)"  Importance="high"/>
    <Message Text="===== LicenseFile:              @(LicenseFile)"  Importance="high"/>
    <Message Text="===== PackageOutputPath:        $(PackageOutputPath)"  Importance="high"/>
    <Message Text="===== PackageLicenseFile:       $(PackageLicenseFile)"  Importance="high"/>
  </Target>


	<!--
  this is only needed for profiling so dont worry about it for now... but it seems to have an issue with fsharp
    https://github.com/dotnet/fsharp/issues/7363
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugType>full</DebugType>
    <DebugSymbols>true</DebugSymbols>
  </PropertyGroup>
  -->

	<ItemGroup>
		<!-- This added additional documentation to your build output -->
		<CodeDocumentation Include="**\*.md" />
		<CodeDocumentation Include="**\*.plantuml" />
		<CodeDocumentation Include="**\*.puml" />
		<CodeDocumentation Remove="bin\**\*.*" />
		<CodeDocumentation Remove="obj\**\*.*" />
		<CodeDocumentation Remove="TestResults\**\*.*" />
		<CodeDocumentation Remove="TestData\**\*.*" />

		<!-- these items will be automatically included as embedded resources in your assembly. -->
		<Examples Include="**\*.txt" />
		<Examples Include="**\*.json" />
		<Examples Include="**\*.html" />
		<Examples Include="**\*.csv" />
		<Examples Include="**\*.sql" />
		<Examples Include="**\*.xml" />
		<Examples Include="**\*.yml" />
		<Examples Remove="bin\**\*.*" />
		<Examples Remove="obj\**\*.*" />
		<Examples Remove="TestResults\**\*.*" />

		<Content Include="@(CodeDocumentation)" Pack="true" PackagePath="\docs" />
		<EmbeddedResource Include="@(Examples)" Pack="true" PackagePath="\examples"  />
	</ItemGroup>

	<ItemGroup Condition="'$(PackageReadmeFile)'!='' and Exists('$(PackageReadmeFile)')">
		<None Remove="$(PackageReadmeFile)" />
		<None Include="$(PackageReadmeFile)" Pack="true" PackagePath="\"/>
	</ItemGroup>

  <Import Project="SqlClr.Build.props"/>

</Project>
